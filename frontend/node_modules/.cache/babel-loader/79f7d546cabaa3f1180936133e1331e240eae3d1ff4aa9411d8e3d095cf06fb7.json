{"ast":null,"code":"var _jsxFileName = \"F:\\\\TestAishaTask\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [prompts, setPrompts] = useState([]);\n  const [selectedPrompt, setSelectedPrompt] = useState(\"\");\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [output, setOutput] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false); // Track submission status\n\n  useEffect(() => {\n    // Fetch saved prompts from the backend\n    axios.get(\"http://127.0.0.1:5000/get-prompts\").then(response => {\n      setPrompts(response.data.prompts || []);\n    }).catch(error => {\n      console.error(\"Error fetching prompts:\", error);\n      alert(\"Unable to load saved prompts.\");\n    });\n\n    // Fetch image filenames dynamically from the backend\n    axios.get(\"http://127.0.0.1:5000/images\").then(response => {\n      const filenames = response.data; // Array of filenames\n      const imageList = filenames.map((filename, index) => ({\n        id: index + 1,\n        src: `http://127.0.0.1:5000/images/${filename}`,\n        // Full image URL\n        filename\n      }));\n      setImages(imageList);\n    }).catch(error => {\n      console.error(\"Error fetching images:\", error);\n      alert(\"Unable to load images.\");\n    });\n  }, []);\n  const handlePromptClick = prompt => {\n    setSelectedPrompt(prompt);\n  };\n  const handleImageSelect = image => {\n    setSelectedImages(prev => prev.includes(image) ? prev.filter(img => img !== image) : [...prev, image]);\n  };\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleAddPrompt = () => {\n    if (inputText.trim() === \"\") return;\n    const newPrompt = inputText.trim();\n\n    // Save the prompt to the backend\n    axios.post(\"http://127.0.0.1:5000/save-prompt\", {\n      prompt: newPrompt\n    }).then(() => {\n      setPrompts([...prompts, newPrompt]);\n      setSelectedPrompt(newPrompt); // Set the newly added prompt as selected\n      setInputText(\"\"); // Clear the input field\n    }).catch(error => {\n      console.error(\"Error saving prompt:\", error);\n      alert(\"Unable to save the prompt.\");\n    });\n  };\n  const handleSubmit = () => {\n    // Disable the \"Go\" button during submission\n    setIsSubmitting(true);\n\n    // Validate prompt and selected images\n    if (!selectedPrompt && !inputText.trim()) {\n      alert(\"Please select or add a prompt before submitting.\");\n      setIsSubmitting(false);\n      return;\n    }\n    if (selectedImages.length === 0) {\n      alert(\"Please select at least one image.\");\n      setIsSubmitting(false);\n      return;\n    }\n\n    // Add a new prompt if inputText is provided and no prompt is selected\n    if (inputText.trim() && !selectedPrompt) {\n      handleAddPrompt();\n      return; // Wait for the prompt to be added\n    }\n\n    // Get filenames of selected images\n    const selectedFilenames = selectedImages.map(imgSrc => {\n      const image = images.find(image => image.src === imgSrc);\n      return (image === null || image === void 0 ? void 0 : image.filename) || \"\"; // Map to filename or empty string if not found\n    });\n\n    // Ensure no empty filenames are included\n    const validFilenames = selectedFilenames.filter(filename => filename);\n\n    // API request with selected prompt and images\n    axios.post(\"http://127.0.0.1:5000/process\", {\n      prompt: selectedPrompt,\n      images: selectedImages\n    }).then(response => {\n      const results = response.data.output;\n      const formattedOutput = results.map(result => `Filename: ${result.filename}\\nDescription: ${result.description}`).join(\"\\n\\n\");\n      setOutput(formattedOutput);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while processing your request.\");\n    }).finally(() => {\n      setIsSubmitting(false); // Re-enable the \"Go\" button\n    });\n  };\n  const handleGoClick = () => {\n    // If input text is empty, do nothing\n    if (!inputText.trim()) {\n      return;\n    }\n\n    // If there is text, directly submit\n    handleSubmit();\n  };\n  const handleEnterKey = e => {\n    if (e.key === \"Enter\") {\n      handleGoClick(); // Trigger the Go button click functionality when Enter is pressed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prompts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), prompts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No prompts added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: selectedPrompt === prompt ? \"active\" : \"\",\n          onClick: () => handlePromptClick(prompt),\n          children: prompt\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a new prompt here...\",\n          value: inputText,\n          onChange: handleInputChange,\n          onKeyDown: handleEnterKey // Trigger the functionality when Enter is pressed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoClick,\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Processing...\" : \"Go ➡️\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedPrompt || \"No prompt selected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `image-item ${selectedImages.includes(image.src) ? \"selected\" : \"\"}`,\n          onClick: () => handleImageSelect(image.src),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.src,\n            alt: image.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-box\",\n        children: output.length > 0 ? output.map((res, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Filename: \", res.filename]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", res.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Output will appear here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vr4Bym4pHN0nbX7UQyoBXz4+T68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","prompts","setPrompts","selectedPrompt","setSelectedPrompt","selectedImages","setSelectedImages","output","setOutput","inputText","setInputText","images","setImages","isSubmitting","setIsSubmitting","get","then","response","data","catch","error","console","alert","filenames","imageList","map","filename","index","id","src","handlePromptClick","prompt","handleImageSelect","image","prev","includes","filter","img","handleInputChange","e","target","value","handleAddPrompt","trim","newPrompt","post","handleSubmit","length","selectedFilenames","imgSrc","find","validFilenames","results","formattedOutput","result","description","join","finally","handleGoClick","handleEnterKey","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyDown","disabled","alt","res","idx","_c","$RefreshReg$"],"sources":["F:/TestAishaTask/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [prompts, setPrompts] = useState([]);\n  const [selectedPrompt, setSelectedPrompt] = useState(\"\");\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [output, setOutput] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false); // Track submission status\n\n  useEffect(() => {\n    // Fetch saved prompts from the backend\n    axios\n      .get(\"http://127.0.0.1:5000/get-prompts\")\n      .then((response) => {\n        setPrompts(response.data.prompts || []);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching prompts:\", error);\n        alert(\"Unable to load saved prompts.\");\n      });\n\n    // Fetch image filenames dynamically from the backend\n    axios\n      .get(\"http://127.0.0.1:5000/images\")\n      .then((response) => {\n        const filenames = response.data; // Array of filenames\n        const imageList = filenames.map((filename, index) => ({\n          id: index + 1,\n          src: `http://127.0.0.1:5000/images/${filename}`, // Full image URL\n          filename,\n        }));\n        setImages(imageList);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching images:\", error);\n        alert(\"Unable to load images.\");\n      });\n  }, []);\n\n  const handlePromptClick = (prompt) => {\n    setSelectedPrompt(prompt);\n  };\n\n  const handleImageSelect = (image) => {\n    setSelectedImages((prev) =>\n      prev.includes(image) ? prev.filter((img) => img !== image) : [...prev, image]\n    );\n  };\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleAddPrompt = () => {\n    if (inputText.trim() === \"\") return;\n\n    const newPrompt = inputText.trim();\n\n    // Save the prompt to the backend\n    axios\n      .post(\"http://127.0.0.1:5000/save-prompt\", { prompt: newPrompt })\n      .then(() => {\n        setPrompts([...prompts, newPrompt]);\n        setSelectedPrompt(newPrompt); // Set the newly added prompt as selected\n        setInputText(\"\"); // Clear the input field\n      })\n      .catch((error) => {\n        console.error(\"Error saving prompt:\", error);\n        alert(\"Unable to save the prompt.\");\n      });\n  };\n\n  const handleSubmit = () => {\n    // Disable the \"Go\" button during submission\n    setIsSubmitting(true);\n  \n    // Validate prompt and selected images\n    if (!selectedPrompt && !inputText.trim()) {\n      alert(\"Please select or add a prompt before submitting.\");\n      setIsSubmitting(false);\n      return;\n    }\n  \n    if (selectedImages.length === 0) {\n      alert(\"Please select at least one image.\");\n      setIsSubmitting(false);\n      return;\n    }\n  \n    // Add a new prompt if inputText is provided and no prompt is selected\n    if (inputText.trim() && !selectedPrompt) {\n      handleAddPrompt();\n      return; // Wait for the prompt to be added\n    }\n  \n    // Get filenames of selected images\n    const selectedFilenames = selectedImages.map((imgSrc) => {\n      const image = images.find((image) => image.src === imgSrc);\n      return image?.filename || \"\"; // Map to filename or empty string if not found\n    });\n  \n    // Ensure no empty filenames are included\n    const validFilenames = selectedFilenames.filter((filename) => filename);\n  \n    // API request with selected prompt and images\n    axios\n    .post(\"http://127.0.0.1:5000/process\", {\n      prompt: selectedPrompt,\n      images: selectedImages,\n    })\n    .then((response) => {\n      const results = response.data.output;\n      const formattedOutput = results\n        .map(\n          (result) =>\n            `Filename: ${result.filename}\\nDescription: ${result.description}`\n        )\n        .join(\"\\n\\n\");\n      setOutput(formattedOutput);\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred while processing your request.\");\n    })\n      .finally(() => {\n        setIsSubmitting(false); // Re-enable the \"Go\" button\n      });\n  };\n\n  const handleGoClick = () => {\n    // If input text is empty, do nothing\n    if (!inputText.trim()) {\n      return;\n    }\n\n    // If there is text, directly submit\n    handleSubmit();\n  };\n\n  const handleEnterKey = (e) => {\n    if (e.key === \"Enter\") {\n      handleGoClick(); // Trigger the Go button click functionality when Enter is pressed\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Sidebar (Left) */}\n      <div className=\"sidebar left\">\n        <h2>Prompts</h2>\n        {prompts.length === 0 ? (\n          <p>No prompts added yet.</p>\n        ) : (\n          <ul>\n            {prompts.map((prompt, index) => (\n              <li\n                key={index}\n                className={selectedPrompt === prompt ? \"active\" : \"\"}\n                onClick={() => handlePromptClick(prompt)}\n              >\n                {prompt}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {/* Main Content (Middle) */}\n      <div className=\"main-content\">\n        {/* Input Box and Go Button */}\n        <div className=\"input-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a new prompt here...\"\n            value={inputText}\n            onChange={handleInputChange}\n            onKeyDown={handleEnterKey} // Trigger the functionality when Enter is pressed\n          />\n          {/* Go button should now trigger handleSubmit */}\n          <button onClick={handleGoClick} disabled={isSubmitting}>\n            {isSubmitting ? \"Processing...\" : \"Go ➡️\"}\n          </button>\n        </div>\n\n        {/* Active Prompt */}\n        <div className=\"selected-prompt\">\n          <h2>Selected Prompt</h2>\n          <p>{selectedPrompt || \"No prompt selected.\"}</p>\n        </div>\n\n        {/* Image Selection */}\n        <h3>Select Images</h3>\n        <div className=\"image-grid\">\n          {images.map((image) => (\n            <div\n              key={image.id}\n              className={`image-item ${selectedImages.includes(image.src) ? \"selected\" : \"\"}`}\n              onClick={() => handleImageSelect(image.src)}\n            >\n              <img src={image.src} alt={image.filename} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Sidebar (Right) */}\n      <div className=\"sidebar right\">\n        <h2>Output</h2>\n        <div className=\"output-box\">\n          {output.length > 0 ? (\n            output.map((res, idx) => (\n              <div key={idx} className=\"output-item\">\n                <h4>Filename: {res.filename}</h4>\n                <p>Description: {res.description}</p>\n              </div>\n            ))\n          ) : (\n            <p>Output will appear here...</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFmB,GAAG,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAK;MAClBf,UAAU,CAACe,QAAQ,CAACC,IAAI,CAACjB,OAAO,IAAI,EAAE,CAAC;IACzC,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CE,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC;;IAEJ;IACA1B,KAAK,CACFmB,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMM,SAAS,GAAGN,QAAQ,CAACC,IAAI,CAAC,CAAC;MACjC,MAAMM,SAAS,GAAGD,SAAS,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,MAAM;QACpDC,EAAE,EAAED,KAAK,GAAG,CAAC;QACbE,GAAG,EAAE,gCAAgCH,QAAQ,EAAE;QAAE;QACjDA;MACF,CAAC,CAAC,CAAC;MACHd,SAAS,CAACY,SAAS,CAAC;IACtB,CAAC,CAAC,CACDL,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAIC,MAAM,IAAK;IACpC3B,iBAAiB,CAAC2B,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC3B,iBAAiB,CAAE4B,IAAI,IACrBA,IAAI,CAACC,QAAQ,CAACF,KAAK,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,KAAK,CAC9E,CAAC;EACH,CAAC;EAED,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;IAC/B7B,YAAY,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjC,SAAS,CAACkC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE7B,MAAMC,SAAS,GAAGnC,SAAS,CAACkC,IAAI,CAAC,CAAC;;IAElC;IACA/C,KAAK,CACFiD,IAAI,CAAC,mCAAmC,EAAE;MAAEd,MAAM,EAAEa;IAAU,CAAC,CAAC,CAChE5B,IAAI,CAAC,MAAM;MACVd,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE2C,SAAS,CAAC,CAAC;MACnCxC,iBAAiB,CAACwC,SAAS,CAAC,CAAC,CAAC;MAC9BlC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC;EACN,CAAC;EAED,MAAMwB,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAhC,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,IAAI,CAACX,cAAc,IAAI,CAACM,SAAS,CAACkC,IAAI,CAAC,CAAC,EAAE;MACxCrB,KAAK,CAAC,kDAAkD,CAAC;MACzDR,eAAe,CAAC,KAAK,CAAC;MACtB;IACF;IAEA,IAAIT,cAAc,CAAC0C,MAAM,KAAK,CAAC,EAAE;MAC/BzB,KAAK,CAAC,mCAAmC,CAAC;MAC1CR,eAAe,CAAC,KAAK,CAAC;MACtB;IACF;;IAEA;IACA,IAAIL,SAAS,CAACkC,IAAI,CAAC,CAAC,IAAI,CAACxC,cAAc,EAAE;MACvCuC,eAAe,CAAC,CAAC;MACjB,OAAO,CAAC;IACV;;IAEA;IACA,MAAMM,iBAAiB,GAAG3C,cAAc,CAACoB,GAAG,CAAEwB,MAAM,IAAK;MACvD,MAAMhB,KAAK,GAAGtB,MAAM,CAACuC,IAAI,CAAEjB,KAAK,IAAKA,KAAK,CAACJ,GAAG,KAAKoB,MAAM,CAAC;MAC1D,OAAO,CAAAhB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEP,QAAQ,KAAI,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC;;IAEF;IACA,MAAMyB,cAAc,GAAGH,iBAAiB,CAACZ,MAAM,CAAEV,QAAQ,IAAKA,QAAQ,CAAC;;IAEvE;IACA9B,KAAK,CACJiD,IAAI,CAAC,+BAA+B,EAAE;MACrCd,MAAM,EAAE5B,cAAc;MACtBQ,MAAM,EAAEN;IACV,CAAC,CAAC,CACDW,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMmC,OAAO,GAAGnC,QAAQ,CAACC,IAAI,CAACX,MAAM;MACpC,MAAM8C,eAAe,GAAGD,OAAO,CAC5B3B,GAAG,CACD6B,MAAM,IACL,aAAaA,MAAM,CAAC5B,QAAQ,kBAAkB4B,MAAM,CAACC,WAAW,EACpE,CAAC,CACAC,IAAI,CAAC,MAAM,CAAC;MACfhD,SAAS,CAAC6C,eAAe,CAAC;IAC5B,CAAC,CAAC,CACDlC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,CAAC,CACCmC,OAAO,CAAC,MAAM;MACb3C,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EAED,MAAM4C,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAI,CAACjD,SAAS,CAACkC,IAAI,CAAC,CAAC,EAAE;MACrB;IACF;;IAEA;IACAG,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMa,cAAc,GAAIpB,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACqB,GAAG,KAAK,OAAO,EAAE;MACrBF,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACE5D,OAAA;IAAK+D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBhE,OAAA;MAAK+D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhE,OAAA;QAAAgE,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACfjE,OAAO,CAAC8C,MAAM,KAAK,CAAC,gBACnBjD,OAAA;QAAAgE,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE5BpE,OAAA;QAAAgE,QAAA,EACG7D,OAAO,CAACwB,GAAG,CAAC,CAACM,MAAM,EAAEJ,KAAK,kBACzB7B,OAAA;UAEE+D,SAAS,EAAE1D,cAAc,KAAK4B,MAAM,GAAG,QAAQ,GAAG,EAAG;UACrDoC,OAAO,EAAEA,CAAA,KAAMrC,iBAAiB,CAACC,MAAM,CAAE;UAAA+B,QAAA,EAExC/B;QAAM,GAJFJ,KAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNpE,OAAA;MAAK+D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3BhE,OAAA;QAAK+D,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBhE,OAAA;UACEsE,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,4BAA4B;UACxC5B,KAAK,EAAEhC,SAAU;UACjB6D,QAAQ,EAAEhC,iBAAkB;UAC5BiC,SAAS,EAAEZ,cAAe,CAAC;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eAEFpE,OAAA;UAAQqE,OAAO,EAAET,aAAc;UAACc,QAAQ,EAAE3D,YAAa;UAAAiD,QAAA,EACpDjD,YAAY,GAAG,eAAe,GAAG;QAAO;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNpE,OAAA;QAAK+D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BhE,OAAA;UAAAgE,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBpE,OAAA;UAAAgE,QAAA,EAAI3D,cAAc,IAAI;QAAqB;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAGNpE,OAAA;QAAAgE,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpE,OAAA;QAAK+D,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBnD,MAAM,CAACc,GAAG,CAAEQ,KAAK,iBAChBnC,OAAA;UAEE+D,SAAS,EAAE,cAAcxD,cAAc,CAAC8B,QAAQ,CAACF,KAAK,CAACJ,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;UAChFsC,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAACC,KAAK,CAACJ,GAAG,CAAE;UAAAiC,QAAA,eAE5ChE,OAAA;YAAK+B,GAAG,EAAEI,KAAK,CAACJ,GAAI;YAAC4C,GAAG,EAAExC,KAAK,CAACP;UAAS;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAJvCjC,KAAK,CAACL,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpE,OAAA;MAAK+D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhE,OAAA;QAAAgE,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfpE,OAAA;QAAK+D,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBvD,MAAM,CAACwC,MAAM,GAAG,CAAC,GAChBxC,MAAM,CAACkB,GAAG,CAAC,CAACiD,GAAG,EAAEC,GAAG,kBAClB7E,OAAA;UAAe+D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACpChE,OAAA;YAAAgE,QAAA,GAAI,YAAU,EAACY,GAAG,CAAChD,QAAQ;UAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjCpE,OAAA;YAAAgE,QAAA,GAAG,eAAa,EAACY,GAAG,CAACnB,WAAW;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAF7BS,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACN,CAAC,gBAEFpE,OAAA;UAAAgE,QAAA,EAAG;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACjC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CA/NID,GAAG;AAAA6E,EAAA,GAAH7E,GAAG;AAiOT,eAAeA,GAAG;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}